---
import Layout from '../../layouts/BaseLayout.astro'
import { Icon } from 'astro-icon';
export async function getStaticPaths() {
  const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
  const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;
  const { results: posts } = await fetch(`https://cdn.builder.io/api/v3/content/${builderModel}?${new URLSearchParams({ apiKey: builderAPIpublicKey, fields: ["data.slug", "data.title","data.table"].join(","), cachebust: "true",}).toString()}`).then((res) => res.json()).catch();
  return [...posts.map(({ data: { slug, title,table } }) => [ { params: { slug }, props: { title,table }}])];
}
const { slug } = Astro.params;
const { title,table } = Astro.props;
const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;
// Builder's API requires this field but for this use case the url doesn't seem to matter - the API returns the same HTML
const encodedUrl = encodeURIComponent("moot");
const { html: postHTML } = await fetch(`https://cdn.builder.io/api/v1/qwik/${builderModel}?${new URLSearchParams({  apiKey: builderAPIpublicKey,  url: encodedUrl,  "query.data.slug": slug,  cachebust: "true",}).toString()}`) .then((res) => res.json()) .catch();
---
<Layout lang='en' title={title}>
  <link slot="head" rel="stylesheet" href="/blog.css">
  <div class=`w-full flex justify-center bg-primary min-h-[100vh] md:pt-5`>
    <div class="lg:w-[50vw] md:w-[70vw] bg-primary border border-secondary border-b-0 rounded-b-none md:rounded-lg">
      <div class="w-full h-10 bg-secondary border-secondary border flex items-center md:px-6 justify-between">
        <a href="/blog" class="w-full"><Icon
            name="ph:arrow-fat-left-fill"
            class="text-primary max-w-[30px]"/></a>
        <div class="text-primary font-bold w-full text-end md:text-lg">
          {title}
        </div>
      </div>
      <div class="md:px-7 px-3">
        <div class="flex justify-center">
          {table&&<div id="main" class="w-full border border-secondary my-5 rounded-md p-3 md:w-[20vw]" ><h1 class="pb-3 text-center">Table of Content</h1></div>}
        </div>
        <Fragment set:html={postHTML} />
      </div>
    </div>
  </div>
  <script>
    const TableImporter = document.getElementsByClassName('table');
    const Tablebox = document.createElement("div");
    Tablebox.classList.add("h-40");
    Tablebox.appendChild(document.createTextNode("This is new."));
    for (let index = 0; index < TableImporter.length; index++) {
      const ContentTable = TableImporter[index];
      const id = ContentTable.id;
      const content = ContentTable.innerText;
      const AnotherList = document.createElement("a");
      AnotherList.classList.add(`text-secondary`);
      AnotherList.classList.add(`block`);
      AnotherList.appendChild(document.createTextNode(" - " + content));
      AnotherList.href=`#${id}`
      document.querySelector('#main').appendChild(AnotherList);
    }
  </script>
</Layout>
